// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GameEngine.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Set cell value on game place")]
    public partial class SetCellValueOnGamePlaceFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Set cell value on game place.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Set cell value on game place", "\tTo set cell value on game place\r\n\tAs a game engine\r\n\tI want to create a game pla" +
                    "ce and set cell value on game place", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set cell x = 1 y = 2 value \"x\"")]
        [NUnit.Framework.CategoryAttribute("set")]
        [NUnit.Framework.CategoryAttribute("cell")]
        [NUnit.Framework.CategoryAttribute("x")]
        [NUnit.Framework.CategoryAttribute("=")]
        [NUnit.Framework.CategoryAttribute("1")]
        [NUnit.Framework.CategoryAttribute("y")]
        [NUnit.Framework.CategoryAttribute("=")]
        [NUnit.Framework.CategoryAttribute("2")]
        [NUnit.Framework.CategoryAttribute("value")]
        [NUnit.Framework.CategoryAttribute("\"x\"")]
        public virtual void SetCellX1Y2ValueX()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set cell x = 1 y = 2 value \"x\"", new string[] {
                        "set",
                        "cell",
                        "x",
                        "=",
                        "1",
                        "y",
                        "=",
                        "2",
                        "value",
                        "\"x\""});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have a game engine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I create game place size 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And("I set the cell value x = 1 y = 2 to value \"x\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then("The game place should be the size 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And("The value of the cell in x = 1 y = 2 must be \"x\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set cell x = 2 y = 0 value \"y\"")]
        [NUnit.Framework.CategoryAttribute("set")]
        [NUnit.Framework.CategoryAttribute("cell")]
        [NUnit.Framework.CategoryAttribute("x")]
        [NUnit.Framework.CategoryAttribute("=")]
        [NUnit.Framework.CategoryAttribute("2")]
        [NUnit.Framework.CategoryAttribute("y")]
        [NUnit.Framework.CategoryAttribute("=")]
        [NUnit.Framework.CategoryAttribute("0")]
        [NUnit.Framework.CategoryAttribute("value")]
        [NUnit.Framework.CategoryAttribute("\"y\"")]
        public virtual void SetCellX2Y0ValueY()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set cell x = 2 y = 0 value \"y\"", new string[] {
                        "set",
                        "cell",
                        "x",
                        "=",
                        "2",
                        "y",
                        "=",
                        "0",
                        "value",
                        "\"y\""});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("I have a game engine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When("I create game place size 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("I set the cell value x = 2 y = 0 to value \"y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("The game place should be the size 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.And("The value of the cell in x = 2 y = 0 must be \"y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
